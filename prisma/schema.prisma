// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id         String       @id @default(uuid())
    name       String
    email      String       @unique
    password   String
    rent       Rent[]
    avaliation Avaliation[]

    @@map("users")
}

model Book {
    id         String       @id @default(uuid())
    barcode    String       @unique
    title      String       @unique
    author     Author       @relation(fields: [authorId], references: [id])
    authorId   String
    price      Float
    rent       Rent[]
    avaliation Avaliation[]

    @@map("books")
}

model Author {
    id   String @id @default(uuid())
    name String @unique
    book Book[]

    @@map("authors")
}

model Rent {
    id         String      @id @default(uuid())
    user       User        @relation(fields: [userId], references: [id])
    userId     String
    book       Book        @relation(fields: [bookId], references: [id])
    bookId     String
    rentAt     DateTime
    returnAt   DateTime
    devolution Devolution?
    status     Boolean     @default(true)

    @@map("rents")
}

model Devolution {
    id           String   @id @default(uuid())
    rent         Rent     @relation(fields: [rentId], references: [id])
    rentId       String   @unique
    devolutionAt DateTime
    description  String?

    @@map("devolutions")
}

model Avaliation {
    id           String                @id @default(uuid())
    user         User                  @relation(fields: [userId], references: [id])
    userId       String
    book         Book                  @relation(fields: [bookId], references: [id])
    bookId       String
    avaliationAt DateTime
    description  AvaliationDescription

    @@map("avaliation")
}

enum AvaliationDescription {
    EXCELLENT
    GOOD
    NORMAL
    BAD
}

model Admin {
    id       String @id @default(uuid())
    name     String
    email    String @unique
    password String
}
